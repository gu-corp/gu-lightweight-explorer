name: Publish new version
run-name: Publish new ${{ inputs.bump }} version from ${{ github.ref_name }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Positionals'
        required: true
        type: choice
        default: 'build'
        options:
          - major
          - minor
          - patch
          - build
      publish-dockerhub:
        description: "Publish to docker hub"
        required: true
        type: boolean
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.actor }}
  cancel-in-progress: true

jobs:
  publish-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Generate Version
        id: generate_version
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          if [ ${{ inputs.bump }} == major ]; then BUMP='premajor'; fi
          if [ ${{ inputs.bump }} == minor ]; then BUMP='preminor'; fi
          if [ ${{ inputs.bump }} == patch ]; then BUMP='prepatch'; fi
          if [ ${{ inputs.bump }} == build ]; then BUMP='prerelease'; fi
          npm version $BUMP --preid build
          git push origin ${{ github.ref }}
          echo "version=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"
      - name: Push Git Tag
        run: |
          git push origin ${{ steps.generate_version.outputs.version }}
    outputs:
      version: ${{ steps.generate_version.outputs.version }}
 
  push_to_registry:
    name: Push Docker image to Docker Hub
    if: ${{ inputs.publish-dockerhub == true }}
    needs: publish-version
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: gulabs/gu-lightweight-explorer

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=gulabs/gu-lightweight-explorer:buildcache
          cache-to: type=registry,ref=gulabs/gu-lightweight-explorer:buildcache,mode=max
          tags: gulabs/gu-lightweight-explorer:${{ needs.publish-version.outputs.version }}
